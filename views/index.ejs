<!DOCTYPE html>
<html lang="en-US">

<head>
  <%- include ('partials/head.ejs') %>
</head>

<body>
  <%- include ('partials/sidebar.ejs') %>
    <%- include ('partials/top-navbar.ejs') %>
      <%- include ('partials/right-sidebar.ejs') %>

        <div id="content-page" class="content-page">
          <div id="app" class="container">
            <div class="row">
              <div class="col-lg-8 row m-0 p-0">

                <!-- Import the create post form -->
                <%- include ('partials/create-post.ejs') %>

                  <div id="post-list" style="width: 100%;">

                    <!-- Post -->
                    <div v-for="(post, index) in posts" class="col-sm-12 famblrPost">
                      <div class="iq-card iq-card-block iq-card-stretch iq-card-height">
                        <div class="iq-card-body">
                          <div class="user-post-data">
                            <div class="d-flex flex-wrap">

                              <!-- Post Profile Image -->
                              <div class="media-support-user-img mr-3">
                                <img class="rounded-circle img-fluid"
                                  v-bind:src="post.userId.profilePicture ? '/uploads/' + post.userId.profilePicture : '/images/profile.png'" alt="">
                              </div>

                              <!-- Post Name and Date -->
                              <div class="media-support-info mt-2">
                                <h5 class="mb-0 d-inline-block"><a href="#" class="">
                                    {{post.userId.firstName}} {{post.userId.lastName}}</a></h5>
                                <p class="mb-0 text-primary">{{ formatDate(post.date)}}</p>
                              </div>

                              <!-- Post Context Menu -->
                              <div v-if="post.userId._id == user.userId" class="iq-card-post-toolbar">
                                <div class="dropdown">
                                  <span class="dropdown-toggle" data-toggle="dropdown" aria-haspopup="true"
                                    aria-expanded="false" role="button">
                                    <i class="ri-more-fill"></i>
                                  </span>
                                  <div class="dropdown-menu m-0 p-0">
                                    <a class="dropdown-item p-3" v-bind:href="`/posts/${post._id}/edit`">
                                      <div class="d-flex align-items-top">
                                        <div class="icon font-size-20"><i class="ri-edit-line"></i></div>
                                        <div class="data ml-2">
                                          <h6>Edit Post</h6>
                                          <p class="mb-0">Make changes to your post</p>
                                        </div>
                                      </div>
                                    </a>
                                    <a class="dropdown-item p-3" @click="deletePost(post._id)">
                                      <div class="d-flex align-items-top">
                                        <div class="icon font-size-20"><i class="ri-close-circle-line"></i></div>
                                        <div class="data ml-2">
                                          <h6>Delete Post</h6>
                                          <p class="mb-0">Permanently remove this post</p>
                                        </div>
                                      </div>
                                    </a>
                                  </div>
                                </div>
                              </div>

                            </div>
                          </div>

                          <!-- Post Text -->
                          <div class="mt-3">
                            <p>{{ post.text }}</p>
                          </div>

                          <!-- Post Image -->
                          <div v-if="post.image" class="user-post">
                            <a><img v-bind:src="post.image" alt="post-image" class="img-fluid rounded w-100"></a>
                          </div>

                          <div class="comment-area mt-3">
                            <hr>
                            <!-- Comments -->

                            <%- include('partials/create-comment.ejs') %>
                              
                            <!-- Comments -->
                            <!-- <ul class="post-comments p-0 m-0">
                              <li v-for="comment in post.comments" class="mb-2">
                                <div class="d-flex flex-wrap">
                                  <div class="user-img">
                                    <img src="/images/profile.png" alt="userimg"
                                      class="avatar-35 rounded-circle img-fluid">
                                  </div>
                                  <div class="comment-data-block ml-3">
                                    <h6>Monty Carlo</h6>
                                    <p class="mb-0">Lorem ipsum dolor sit amet</p>
                                  </div>
                                </div>
                              </li>
                            </ul> -->

                            <!-- Reply Box -->
                            <!-- <form class="comment-text d-flex align-items-center mt-3" action="javascript:void(0);">
                              <input type="text" class="form-control rounded" placeholder="Reply...">
                              <div class="comment-attagement d-flex">
                                <button type="submit" class="btn btn-light d-block mr-1">Reply</button>
                              </div>
                            </form> -->
                          </div>

                        </div>
                      </div>
                    </div>
                    <!-- End of Posts -->

                    <div v-if="morePostsToLoad" class="col-sm-12 text-center">
                      <image src="/images/spinner_transparent.gif" style="margin: 0 auto;"></image>
                    </div>
                  </div>

              </div>
            </div>
          </div>
        </div>

        <%- include ('partials/footer.ejs') %>
          <%- include ('partials/js-imports.ejs') %>

            <script>
              const loginApp = new Vue({
                el: '#post-list',
                data: {
                  user: null,
                  loading: true,
                  limit: 5,
                  offset: 0,
                  totalItems: null,
                  posts: [],
                },
                mounted: async function () {
                  this.user = jwt_decode(localStorage.famblrToken);

                  this.loadPosts();

                  //Add watcher to load more posts when window scrolls to bottom of page
                  window.onscroll = () => {
                    let bottomOfWindow =
                      document.documentElement.scrollTop + window.innerHeight ===
                      document.documentElement.offsetHeight;
                    if (bottomOfWindow) {
                      this.loadPosts(this.query);
                    }
                  };
                },
                computed: {
                  postId: function () {
                    return window.location.pathname.split("/")[2];
                  },
                  morePostsToLoad: function () {
                    return this.posts.length !== this.totalItems;
                  }
                },
                methods: {
                  createComment: async function (postId) {
                    return await axios.post('/api/comments', {
                            relatedPost: postId,
                            content: document.getElementById(postId).value
                    }).then(response => {
                        console.log("Comment Created Successfully!")
                        console.log(response)
                        document.getElementById(postId).value = null;
                    })
                    // fetch('/api/comments', {
                    //     method: 'POST',
                    //     body: JSON.stringify({
                    //         relatedPost: postId,
                    //         content: document.getElementById(postId).value
                    //     }),
                    //     headers: {
                    //         'Content-Type': 'application/json'
                    //     }
                    // })
                  },
                  loadPosts: async function () {
                    if (this.offset > this.totalItems) return;
                    try {
                      this.loading = true;
                      let response = await axios.get(`/api/posts?limit=${this.limit}&offset=${this.offset}`)

                      this.posts = [
                        ...this.posts,
                        ...response.data.allPosts
                      ];
                      this.totalItems = response.data.totalItems;

                      this.offset += this.limit;

                    } catch (error) {
                      console.error(error)

                    } finally {
                      this.loading = false;
                    }
                  },
                  deletePost: async function (postId) {
                    console.log("Deleting: ", postId)
                    this.posts = this.posts.filter(post => {
                      return post._id != postId
                    })

                    try {
                      let response = await axios.delete(`/api/posts/${postId}`)
                      console.log("Post Deleted from DB")
                    } catch (error) {
                      console.error(error)
                    }
                  },
                  formatDate(date) {
                    return new Date(date).toLocaleString()
                  }
                },
              })
            </script>

</body>

</html>