<!------------------------------------------------------------------------------
  index.ejs
------------------------------------------------------------------------------->
<!DOCTYPE html>
<html lang="en-US">

<head>
    <%- include ('partials/head.ejs') %>
</head>

<body>
    <div id="vue-app">

        <%- include ('partials/sidebar.ejs') %>
            <%- include ('partials/top-navbar.ejs') %>
                <%- include ('partials/right-sidebar.ejs') %>

                    <div id="content-page" class="content-page">
                        <div class="container">

                            <div class="row">
                                <div class="col-lg-12 row m-0 p-0">

                                    <!-- Account Settings Card -->
                                    <div class="iq-card w-100">

                                        <div class="iq-card-header d-flex justify-content-between">
                                            <div class="iq-header-title">
                                                <h4 class="card-title">Edit Post</h4>
                                            </div>
                                        </div>

                                        <!-- Error Message -->
                                        <div class="iq-card-footer" v-if="errorMessage">
                                            <div class="alert alert-danger text-bold ml-3 mr-3" role="alert">
                                                <strong>
                                                    {{errorMessage}}
                                                </strong>
                                            </div>
                                        </div>

                                        <div class="iq-card-body">
                                            <div class="d-flex align-items-center">
                                                <div class="post-text ml-1 mr-1 w-100">
                                                    <textarea v-model="updateForm.text" type="text"
                                                        class="form-control rounded" rows="2"
                                                        style="border:none; line-height: 1.25; min-height: 3em;"
                                                        name="text" id="postText" required></textarea>

                                                    <template v-if="updateForm.preview">
                                                        <hr>

                                                        <div>
                                                            <img :src="updateForm.preview" class="img-fluid" />
                                                            <button @click="removeImage"
                                                                class="btn btn-danger btn-block"
                                                                style="border-top-left-radius: 0; border-top-right-radius: 0;">
                                                                <i class="ri-delete-bin-fill"></i>
                                                            </button>
                                                        </div>

                                                    </template>
                                                </div>

                                            </div>
                                            <hr>
                                            <ul class="post-opt-block d-flex align-items-center list-inline m-0 p-0">
                                                <a href="javascript:$('#imageInput').click()">
                                                    <li class="iq-bg-primary rounded p-2 pointer mr-3">
                                                        <img src="/images/small/07.png" alt="icon"
                                                            class="img-fluid">&nbsp;Add Photo

                                                        <input id="imageInput" type="file" accept="image/*"
                                                            @change="previewImage" style="display: none;">
                                                    </li>
                                                </a>
                                                <li class="ml-auto mr-2">
                                                    <button @click="resetForm" id="cancelButton"
                                                        class="btn btn-outline-secondary">Cancel</button>
                                                </li>
                                                <li>
                                                    <button @click="savePost" id="saveButton"
                                                        class="btn btn-primary d-block">Save</button>
                                                </li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

    </div>

    <%- include ('partials/footer.ejs') %>
        <%- include ('partials/js-imports.ejs') %>

            <script>
                const vueApp = new Vue({
                    el: '#vue-app',
                    data: {
                        user: null,
                        errorMessage: null,
                        post: null,
                        updateForm: {
                            text: '',
                            image: null,
                            preview: null,
                            deleteImage: false
                        },
                        errorMessage: null
                    },
                    computed: {
                        postId: function () {
                            return window.location.pathname.split("/")[2];
                        }
                    },
                    mounted: async function () {
                        axios.defaults.headers.common['Authorization'] = `Bearer ${localStorage.famblrToken}`;

                        await this.getCurrentUser()
                        this.loadPost();
                    },
                    methods: {
                        getCurrentUser: async function () {
                            try {
                                let response = await axios.get(`/api/users/current`)
                                this.user = response.data.user;

                            } catch (error) {
                                console.error(error)
                                window.location.href = '/logout'
                            }
                        },
                        loadPost: async function () {
                            console.log("Loading Post...")
                            try {
                                let response = await axios.get(`/api/posts/${this.postId}`);
                                this.post = response.data;
                                this.updateForm.text = this.post.text;

                                if (this.post.image) {
                                    this.updateForm.preview = `/uploads/${this.post.image}`
                                }

                            } catch (error) {
                                this.errorMessage = error.response.data.error;
                            }
                        },
                        savePost: async function () {
                            console.log("Saving Post...")
                            try {
                                this.errorMessage = null;
                                let formData = new FormData();
                                formData.append('text', this.updateForm.text);
                                formData.append('image', this.updateForm.image);
                                formData.append('deleteImage', this.updateForm.deleteImage);

                                let response = await axios.put(`/api/posts/${this.postId}`,
                                    formData,
                                    {
                                        headers: {
                                            'Content-Type': 'multipart/form-data'
                                        }
                                    })

                                this.post = response.data.post;

                                console.log("Post Successfully Updated")

                            } catch (error) {
                                console.error(error.response.data.error);
                                this.errorMessage = error.response.data.error;
                            }
                        },
                        previewImage: function (event) {
                            let input = event.target;
                            if (input.files) {
                                let reader = new FileReader();
                                reader.onload = (e) => {
                                    this.updateForm.preview = e.target.result;
                                }
                                this.updateForm.image = input.files[0];
                                reader.readAsDataURL(input.files[0]);
                                this.updateForm.deleteImage = false;
                            }
                        },
                        removeImage: function () {
                            console.log("removeImage...")
                            let input = document.getElementById("imageInput")
                            input.value = null;
                            this.updateForm.preview = null;
                            this.updateForm.image = null;
                            this.updateForm.deleteImage = true;
                        },
                        resetForm: function () {
                            console.log("Resetting Form...")
                            this.errorMessage = null;

                            this.updateForm.text = this.post.text;
                            this.updateForm.image = null;
                            this.updateForm.preview = this.post.image ? `/uploads/${this.post.image}` : null;
                            this.updateForm.deleteImage = false;
                        },
                    },
                })
            </script>


</body>

</html>